{"version":3,"file":"markdown-editor.component.js","sourceRoot":"","sources":["file:///b:/buildmotion/angular-markdown-blog/source/angular-markdown-editor/src/app/markdown-editor/markdown-editor.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,sCAauB;AACvB,wCAEwB;AAGxB,oDAAmD;AACnD,sCAA+C;AAC/C,qCAAuC;AAEvC,IAAM,gCAAgC,GAAQ;IAC5C,OAAO,EAAE,yBAAiB;IAC1B,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,uBAAuB,EAAvB,CAAuB,CAAC;IACtD,KAAK,EAAE,IAAI;CACZ,CAAC;AAaF;IAA6C,2CAAa;IAqCxD,iCACoC,MAAM;QAD1C,YAGE,iBAAO,SACR;QAHmC,YAAM,GAAN,MAAM,CAAA;QApCjC,aAAO,GAAsB,EAAE,CAAC;;IAuCzC,CAAC;IAnCD,0CAAQ,GAAR;QACE,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC;YACxE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC7C,CAAC;QAED,sDAAsD;QACtD,IAAM,MAAM,GAAG,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;QAC5D,gDAAgD;QAEhD,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAED,4CAAU,GAAV,UAAW,CAAM;QACf,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;gBACjD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnC,CAAC;QACH,CAAC;IACH,CAAC;IAED,iDAAe,GAAf;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;YACrC,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAW,GAAX;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAlCuB;QAAvB,gBAAS,CAAC,WAAW,CAAC;kCAAW,iBAAU;6DAAC;IACpC;QAAR,YAAK,EAAE;uDAAU,SAAS,oBAAT,SAAS,EAAC,OAAO;4DAAM;IAF9B,uBAAuB;QAXnC,gBAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,aAAa,EAAE,wBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,4CAET;YACD,SAAS,EAAE;gBACT,gCAAgC;aACjC;SAEF,CAAC;QAuCG,WAAA,aAAM,CAAC,yBAAgB,CAAC,CAAA;;OAtChB,uBAAuB,CA2CnC;IAAD,8BAAC;;CAAA,AA3CD,CAA6C,6BAAa,GA2CzD;AA3CY,0DAAuB","sourcesContent":["import {\n  Component,\n  NgModule,\n  forwardRef,\n  ElementRef,\n  ViewChild,\n  AfterViewInit,\n  Input,\n  OnDestroy,\n  OnInit,\n  ModuleWithProviders,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgControlBase } from './../ngControlBase';\nimport { SIMPLEMDE_CONFIG } from './../config';\nimport * as SimpleMDE from 'simplemde';\n\nconst SIMPLEMDE_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MarkdownEditorComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'simplemde',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <textarea #simplemde></textarea>\n  `,\n  providers: [\n    SIMPLEMDE_CONTROL_VALUE_ACCESSOR\n  ],\n  // styleUrls: ['../node_modules/simplemde/dist/simplemde.min.css']\n})\nexport class MarkdownEditorComponent extends NgControlBase implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('simplemde') textarea: ElementRef;\n  @Input() options: SimpleMDE.Options = {};\n\n  private simplemde: SimpleMDE;\n\n  ngOnInit() {\n    if (typeof this.config !== 'object' || typeof this.options !== 'object') {\n      throw new Error('config is not an object');\n    }\n\n    // const config = { ...this.config, ...this.options };\n    const config = {config: this.config, options: this.options};\n    // config.element = this.textarea.nativeElement;\n\n    this.simplemde = new SimpleMDE(config);\n  }\n\n  writeValue(v: any) {\n    if (v !== this._innerValue) {\n      this._innerValue = v;\n      if (this.value != null && this.simplemde != null) {\n        this.simplemde.value(this.value);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    this.simplemde.codemirror.on('change', () => {\n      this.value = this.simplemde.value();\n    });\n  }\n\n  ngOnDestroy() {\n    this.simplemde = null;\n  }\n\n  constructor(\n    @Inject(SIMPLEMDE_CONFIG) private config\n  ) {\n    super();\n  }\n\n}\n"]}